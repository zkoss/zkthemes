@import "~./zul/less/_header.less";

.z-combobox,
.z-bandbox,
.z-datebox,
.z-timebox,
.z-spinner,
.z-doublespinner {
	display: inline-block;
	min-height: @baseButtonHeight;
	font-size: @fontSizeMedium;
	line-height: normal; //reset for inside other component
	white-space: nowrap;
	position: relative;

	&-input {
		.fontStyle(@baseContentFontFamily, @fontSizeMedium, normal, @baseTextColor);
		width: 100%;
		height: @baseButtonHeight;
		border: 1px solid @inputBorderColor;
		.borderRadius(@borderRadiusSmall);
		margin: 0;
		padding: 4px 5px;
		padding-right: @baseButtonWidth + 5px;
		line-height: @baseLineHeight;
		background: @inputBackgroundColor;

		&:focus {
			.boxShadow('inset 1px 1px 1px rgba(210, 210, 210, 0.75)');
		}
		&[readonly] {
			border-color: @readonlyBorderColor;
			background: @readonlyBackgroundColor;
		}
		&[readonly]:focus {
			.boxShadow('none');
		}
	}

	&-input-full {
		padding-right: 5px;
	}

	&-button {
		.iconFontStyle(@baseFontSize, @iconColor);
		display: inline-block;
		position: absolute;
		top: 0;
		right: 0;
		min-width: @baseButtonWidth;
		height: @baseButtonHeight;
		border: 1px solid @inputBorderColor;
		.rightBorderRadius(@borderRadiusSmall);
		padding: 4px;
		line-height: @baseLineHeight;
		background: @inputBackgroundColor;
		text-align: left;
		vertical-align: middle;
		overflow: hidden;
		cursor: pointer;

		&:hover {
			border-color: @hoverBorderColor;
			.verGradient(@hoverGradientStart, @hoverGradientEnd);
		}
		&:active {
			border-color: @activeBorderColor;
			.verGradient(@activeGradientStart, @activeGradientEnd);
			.boxShadow('inset 1px 1px 1px #91AAB7');
		}
	}

	&-disabled {
		.opacity(@disabledOpacity);
		& * {
			color: @disabledColor !important;
			background: @disabledBackgroundColor !important;
			cursor: default !important;
		}
	}

	&-invalid {
		border: 1px solid @invalidBorderColor !important;
		background: @baseBackgroundColor;
		.boxShadow(inset -1px 0 0 @invalidBorderColor);
	}

	&-invalid + &-button {
		border-left: 1px solid @invalidBorderColor !important;
	}

	&-readonly:focus {
		border-color: @readonlyBorderColor;
		border-right-width: 0;
		background: transparent repeat-x 0 0;
		cursor: default;
		.boxShadow(none);
	}
}

.z-combobox-disabled>.z-combobox-button:hover,
.z-bandbox-disabled>.z-bandbox-button:hover,
.z-datebox-disabled>.z-datebox-button:hover,
.z-timebox-disabled>.z-timebox-button:hover,
.z-spinner-disabled>.z-spinner-button:hover,
.z-doublespinner-disabled>.z-doublespinner-button:hover,
.z-combobox-disabled>.z-combobox-button:active,
.z-bandbox-disabled>.z-bandbox-button:active,
.z-datebox-disabled>.z-datebox-button:active,
.z-timebox-disabled>.z-timebox-button:active,
.z-spinner-disabled>.z-spinner-button:active,
.z-doublespinner-disabled>.z-doublespinner-button:active {
    border-color: @inputBorderColor;
    .resetGradient();
    .boxShadow('none');
}

.z-combobox-input,
.z-bandbox-input,
.z-datebox-input {
	&[readonly] {
		cursor: pointer;
	}
}

.z-combobox-button.z-combobox-disabled,
.z-bandbox-button.z-bandbox-disabled,
.z-datebox-button.z-datebox-disabled,
.z-timebox-button.z-timebox-disabled,
.z-spinner-button.z-spinner-disabled,
.z-doublespinner-button.z-doublespinner-disabled {
	display: none;
}

.z-combobox-button {
	font-size: @fontSizeLarge;
	min-height: @baseButtonHeight;
	padding-left: 7px;
	padding-top: 5px;
}

.z-datebox-button,
.z-bandbox-button {
	text-align: center;
}

.z-timebox-button,
.z-spinner-button,
.z-doublespinner-button {
	padding: 0;

	&:hover,
	&:active {
		.resetGradient();
		.boxShadow(none);
	}

	& > a {
		color: @iconColor;
		.size(@baseButtonWidth, @baseButtonHeight / 2);
		padding: 0 7px;
		background: @baseBackgroundColor;
		position: absolute;
		left: 0;
		overflow: hidden;
		text-decoration: none;

		&:first-child {// up icon
			top: -1px;
		}
		&:hover {
			border-color: @hoverBorderColor;
			.verGradient(@hoverGradientStart, @hoverGradientEnd);
		}
	}
	// separator
	& > i {
		z-index: 2; // greater than arrow icon
	}
	&:hover > i {
		.size(@baseButtonWidth, 1px);
		border-top: 1px solid @hoverBorderColor;
		position: absolute;
		top: 11px;
		left: 0;
	}
	& > a ~ a {// bottom icon
		bottom: -1px;

		& > i { // fix 1px alignment
			position: relative;
			top: -2px;
		}
	}
}

.z-timebox-disabled a,
.z-spinner-disabled a,
.z-doublespinner-disabled a {
	&:hover {
		.resetGradient();
		.boxShadow('none');
	}

	// separator
	& + i[class*='-separator'] {
		display: none;
	}
}
// button active
.btnActive(@parent) {
	@selector: ~'@{parent}';
	@{selector} {
		&-active&-icon,
		&-active&-icon:hover {
			border-color: @activeBorderColor;
			.verGradient(@activeGradientStart, @activeGradientEnd);
			.boxShadow('inset 1px 1px 1px #91AAB7');
		}
		&-button > a&-active:first-child {
			top: 0;
		}
		&-button > a ~ a&-active {
			bottom: -2px;
		}
	}
}
.btnActive('.z-timebox');
.btnActive('.z-spinner');
.btnActive('.z-doublespinner');

// Inplace editing
.z-combobox-inplace .z-combobox-input,
.z-bandbox-inplace .z-bandbox-input,
.z-datebox-inplace .z-datebox-input,
.z-timebox-inplace .z-timebox-input,
.z-spinner-inplace .z-spinner-input,
.z-doublespinner-inplace .z-doublespinner-input {
	border: 0;
	padding: 3px;
	background: none;

	&:focus {
		.resetGradient();
		.boxShadow('none');
	}
}
.z-combobox-inplace .z-combobox-button,
.z-bandbox-inplace .z-bandbox-button,
.z-datebox-inplace .z-datebox-button,
.z-timebox-inplace .z-timebox-button,
.z-spinner-inplace .z-spinner-button,
.z-doublespinner-inplace .z-doublespinner-button {
	visibility: hidden; // Bug ZK-2216: Performance issue of Listbox and Combobox with inplace="true"
}

// combobox emptySearchMessage
.z-combobox-empty-search-message {
	display: block;
	padding: 3px 2px;
	position: relative;
	text-shadow: 0 1px #FFFFFF;
	min-height: 20px;
	color: @disabledColor;
}
.z-combobox-empty-search-message-hidden {
	display: none;
}

// Comboitem
.z-comboitem,
.z-comboitem-button {
	font-size: @fontSizeMedium;
	white-space: nowrap;
	cursor: pointer;
}
.z-comboitem {
	display: block;
	padding: 3px 2px;
	position: relative;
	text-shadow: 0 1px #FFFFFF;
	min-height: 20px; //ZK-2783: give default height to empty item
}
.z-comboitem-inner,
.z-comboitem-content {//description
	.iconFontStyle(@fontSizeXSmall, @textColorGray);
}
.z-comboitem,
.z-comboitem a,
.z-comboitem a:visited {
	font-size: @fontSizeMedium;
	font-weight: normal;
	color: @baseTextColor;
	text-decoration: none;
}
.z-comboitem:hover {
	.verGradient(@hoverGradientStart, @hoverGradientEnd);
}
.z-comboitem-selected {
	.verGradient(@selectedGradientStart, @selectedGradientEnd);
	.z-comboitem-text {
		color: @selectedColor;
	}
}
.z-comboitem-selected:hover {
	.verGradient(@selectedHoverGradientStart, @selectedHoverGradientEnd);
	.z-comboitem-text {
		color: @selectedHoverColor;
	}
}
.z-comboitem-image {
	margin-top: -4px;
	margin-right: 3px;
	float: left;
	
	&:empty {
		margin-right: 0px;
	}
}
.z-comboitem-icon {
	padding: 0 4px 0 3px;
}
.z-combobox-popup,
.z-bandbox-popup,
.z-datebox-popup,
.z-timebox-popup {
	font-family: @baseContentFontFamily;
	font-weight: normal;
	font-size: @fontSizeMedium;
	display: block;
	border: 1px solid @popupBorderColor;
	padding: 2px;
	background: @popupBackgroundColor;
	position: absolute;
	overflow: hidden;
}

.z-combobox-popup {
	overflow: auto;
	min-height: 10px;
}

.z-bandbox-popup {
	overflow: auto;
	.boxShadow('0 0 15px rgba(0, 0, 0, 0.35)');
	min-height: 10px;
}

.z-combobox-content {
	border: 0;
	padding: 0;
	margin: 0;
	background: transparent none repeat 0 0;
	position: relative;
	list-style-image: none;
	list-style-position: outside;
	list-style-type: none;
	min-width: 100%;
	display: inline-block;
}

//Shadow
.z-combobox-shadow,
.z-bandbox-shadow,
.z-datebox-shadow {
	.borderRadius(@borderRadiusSmall);
	.boxShadow('0 0 15px rgba(0, 0, 0, 0.35)');
}